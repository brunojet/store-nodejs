// Modelagem de dados original do projeto
// Copie e adapte para o novo projeto TypeScript

// ...original...
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
    output   = "../src/generated/prisma"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Configure o arquivo .env na raiz do projeto com:
// DATABASE_URL="postgresql://postgres:postgres@localhost:5432/mystore_db?schema=store_nodejs"

model TerminalModelo {
    id                     Int                      @id @default(autoincrement()) @map("id")
    nome                   String                   @map("nome")
    ConfiguracaoAplicativo ConfiguracaoAplicativo[]

    @@map("terminal_modelo")
}

enum TipoIntegracao {
    ADQ
    TEF
}

model Anexo {
    id       Int        @id @default(autoincrement()) @map("id")
    filePath String     @map("file_path")
    images   AppImage[]

    @@map("anexo")
}

model AppImage {
    id                  Int                @id @default(autoincrement()) @map("id")
    anexo               Anexo              @relation(fields: [anexoId], references: [id])
    anexoId             Int                @map("anexo_id")
    appVersoes          VersaoAplicativo[] @relation("versaoAplicativoIcone")
    detalheAplicativo   DetalheAplicativo? @relation(fields: [detalheAplicativoId], references: [id])
    detalheAplicativoId Int?               @map("app_detalhe_id")

    @@map("app_image")
}

model SuporteParceiro {
    id                 Int                  @id @default(autoincrement())
    codigoParceiro     String               @map("codigo_parceiro")
    nome               String
    email              String
    telefone           String
    cadastroAplicativo CadastroAplicativo[]

    @@map("suporte_parceiro")
}

model DetalheAplicativo {
    id                 Int                  @id @default(autoincrement()) @map("id")
    descricao          String               @map("descricao")
    images             AppImage[]
    cadastroAplicativo CadastroAplicativo[]

    @@map("detalhe_aplicativo")
}

model CadastroAplicativo {
    id                     Int                      @id @default(autoincrement()) @map("id")
    codigoParceiro         String                   @map("codigo_parceiro")
    codigoProduto          String                   @map("codigo_produto")
    suporteParceiro        SuporteParceiro?         @relation(fields: [suporteParceiroId], references: [id])
    suporteParceiroId      Int?
    detalhesAplicativo     DetalheAplicativo        @relation(fields: [detalhesAplicativoId], references: [id])
    detalhesAplicativoId   Int                      @map("app_detalhes_id")
    configuracaoAplicativo ConfiguracaoAplicativo[]

    @@map("cadastro_aplicativo")
}

model ConfiguracaoAplicativo {
    id                   Int                @id @default(autoincrement()) @map("id")
    nomePacoteApp        String             @map("nome_pacote_app")
    tipoIntegracao       TipoIntegracao     @map("tipo_integracao")
    terminalModeloId     Int                @map("terminal_modelo_id")
    terminalModelo       TerminalModelo     @relation(fields: [terminalModeloId], references: [id])
    cadastroAplicativoId Int                @map("cadastro_aplicativo_id")
    cadastroAplicativo   CadastroAplicativo @relation(fields: [cadastroAplicativoId], references: [id])
    catalogoAplicativo   CatalogoAplicativo[]

    @@map("configuracao_aplicativo")
}

model VersaoAplicativo {
    id                 Int                  @id @default(autoincrement()) @map("id")
    icone              AppImage             @relation("versaoAplicativoIcone", fields: [iconeId], references: [id])
// ...continua no original...
